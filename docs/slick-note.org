#+title: slick note

- slick provides collection-like API for relational databases

* [note] object mapping

  - slick does not help you make id to nested list

  - slick stores id, similar to the database

* 1 Basics

  - query -- collection-like API
    with map, flatMap, filter, and withFilter

  - query.result : DBIOAction[T]

  - db.run(action) : Future[T]

* 2 Selecting Data

  - query.map(row => ...) : Query
    query.filter(row => ...) : Query
    query.filterOpt(option)((row, value) => ...) : Query
    query.filterIf(flag)(row => ...) : Query

  - query.sortBy(row => ...) : Query
    query.take(n) : Query
    query.drop(n) : Query

  - query.exists : Query

* 3 Creating and Modifying Data

  - table += row : Action
    table ++= rows : Action
    table.returning(query) : TableQuery
    table.delete : Action
    table.update(tuple) : Action

* 4 Combining Actions

  - the API is designed for exception `Try`
    instead of `Either`

* [note] three Monads

  - Query
  - BDIO and BDIOAction
  - Future

* 5 Data Modelling

* 6 Joins and Aggregates

* 7 Plain SQL
